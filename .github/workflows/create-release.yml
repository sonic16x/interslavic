name: Create release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "New version (e.g., 1.21.1)"
        required: true
      description:
        description: "Description of release"
        required: false
jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create PR with version update
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "fix/update-version-to-${{ github.event.inputs.version }}"
          commit-message: "Bump version to ${{ github.event.inputs.version }}"
          title: "Release ${{ github.event.inputs.version }} [skip ci]"
          body: "Automated version update"
          labels: "automated"
          base: "master"

      - name: Merge PR
        if: steps.create-pr.outputs.pull-request-number != ''
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --merge --delete-branch --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Verify PR merge
        id: verify-merge
        if: steps.create-pr.outputs.pull-request-number != ''
        run: |
          pr_state=$(gh pr view ${{ steps.create-pr.outputs.pull-request-number }} --json state --jq '.state')
          if [ "$pr_state" = "MERGED" ]; then
            echo "PR successfully merged"
            echo "pr_merged=true" >> $GITHUB_OUTPUT
          else
            echo "PR was not merged"
            echo "pr_merged=false" >> $GITHUB_OUTPUT
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        if: steps.verify-merge.outputs.pr_merged == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: v${{ github.event.inputs.version }}
          body: {{ github.event.inputs.description }}
          draft: false
          prerelease: false
