name: PR merged/closed

on:
  pull_request:
    types: [closed]

jobs:
  remove-deploys:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Remove deployments from Cloudflare Pages
        env:
          CF_AUTH_TOKEN: ${{ secrets.CF_AUTH_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
          BRANCH_NAME: pr-${{ github.event.number }}
        run: |
          deployments=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments?env=preview" \
            -H "Authorization: Bearer ${CF_AUTH_TOKEN}")

          if [[ $(echo "$deployments" | jq -r '.success') != "true" ]]; then
            echo "Error fetching deployments"
            exit 1
          fi

          deploy_ids=$(echo "$deployments" | jq -r ".result[] | select(.deployment_trigger.metadata.branch == \"$BRANCH_NAME\") | .id")

          if [[ -z "$deploy_ids" ]]; then
            echo "No deployments found for branch: $BRANCH_NAME"
            exit 0
          fi

          for deploy_id in $deploy_ids; do
            echo "Deleting deployment $deploy_id for branch $BRANCH_NAME"
            delete_response=$(curl -s -X DELETE "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments/${deploy_id}?force=true" \
              -H "Authorization: Bearer ${CF_AUTH_TOKEN}")
          
            if [[ $(echo "$delete_response" | jq -r '.success') == "true" ]]; then
              echo "Deployment $deploy_id deleted successfully."
            else
              echo "Failed to delete deployment $deploy_id."
            fi
          done

          echo "All deployments for branch $BRANCH_NAME have been removed."